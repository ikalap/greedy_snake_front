pipeline {

    agent {
        kubernetes {
            inheritFrom 'default'
            yaml """
            spec:
              containers:
              - name: node
                image: node:20
                command:
                - cat
                tty: true
              - name: docker
                image: docker:latest
                command: ['cat']
                tty: true
              - name: kubectl
                image: lachlanevenson/k8s-kubectl:v1.20.2
                command:
                - cat
                tty: true
            """
        }
    }

    environment {
        PROJECT_NAME = "greedy-snake-front"
        IMAGE_NAME = "${PROJECT_NAME}:${env.BUILD_NUMBER}"
        DOMAIN = "greedy-snake.ikalpa.site"
        REGISTRY_URL = "docker-registry-service:5000"
        FULL_IMAGE_NAME = "${REGISTRY_URL}/${PROJECT_NAME}:${env.BUILD_NUMBER}"
    }

    stages {
        stage('打印环境变量'){
            steps{
                echo "${PROJECT_NAME}"
                echo "${IMAGE_NAME}"
            }
        }

        stage('构建和发布Docker镜像') {
            steps {
                container('docker') {
                    sh 'docker version'

                    script {
                        sh "docker build -t ${IMAGE_NAME} -f ./deploy/Dockerfile ."
                        sh "docker tag ${IMAGE_NAME} ${FULL_IMAGE_NAME}"
                        sh "docker push ${FULL_IMAGE_NAME}"
                    }
                }
            }
        }

        stage('动态修改k8s配置文件') {
            steps {
                container('kubectl'){
                    script {
                        sh """
                            echo '更新k3s.yaml中的项目名称和镜像名称'
                            sed -i "s/{PROJECT_NAME}/${PROJECT_NAME}/" deploy/k8s.yml
                            sed -i "s/{IMAGE_NAME}/${FULL_IMAGE_NAME}/" deploy/k8s.yml
                            sed -i "s/{DOMAIN}/${DOMAIN}/" deploy/k8s.yml
                            cat deploy/k8s.yml
                        """
                    }
                }
            }
        }

        stage('部署k8s') {
            steps {
                container('kubectl'){
                    sh """
                       kubectl apply -f deploy/k8s.yml
                       kubectl rollout status deployment/${PROJECT_NAME}
                       """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
//             sh ''' docker rmi -f $(docker images -q)  '''
        }
    }

}