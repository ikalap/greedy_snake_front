pipeline {

    agent any

    environment {
        PROJECT_NAME = 'greedy_snake_front'
        IMAGE_NAME = "${env.JOB_NAME}-${env.BUILD_NUMBER}"
    }

    stages {
        stage('打印环境变量'){
            steps{
                echo '${PROJECT_NAME}'
                echo '${IMAGE_NAME}'
                echo "${PROJECT_NAME}"
                echo "${IMAGE_NAME}"
            }
        }

        stage('构建和发布Docker镜像') {
            steps {
                sh 'docker version'

                script {
                    def dockerImageName = "${env.JOB_NAME}-${env.BUILD_NUMBER}"
                    sh """
                        echo '使用${dockerImageName}镜像部署'
                        export IMAGE_TAG=${dockerImageName}
                        docker build -t ${dockerImageName} -f ./deploy/Dockerfile .
                       """
//                     sh """
//                         echo 'push到本地镜像仓库里面'
//                         docker tag ${dockerImageName} localhost:30500/${dockerImageName}
//                         docker push localhost:30500/${dockerImageName}
//                     """
                }
            }
        }

        stage('动态修改k8s配置文件') {
            steps {
                script {
                    sh """
                        echo '将k8s部署文件deployment中的image:tag更改为"${env.JOB_NAME}-${env.BUILD_NUMBER}'
                        sed -i "s/{image_name}/${env.JOB_NAME}/" deploy/deployment.yml
                        sed -i "s/{image_tag}/${env.BUILD_NUMBER}/" deploy/deployment.yml
                        sed -i "s/{image_tag}/${env.BUILD_NUMBER}/" deploy/deployment.yml
                    """                }
            }
        }

        stage('部署k8s') {
            steps {
                sh """
                   kubectl apply -f deployment.yml
                   kubectl rollout status deployment/kalpa-home
                   """
            }
        }
    }

    post {
        always {
            cleanWs()
//             sh ''' docker rmi -f $(docker images -q)  '''
        }
    }

}